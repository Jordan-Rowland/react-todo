{"version":3,"sources":["TodoItem.jsx","TodoList.jsx","App.jsx","index.js"],"names":["TodoItem","props","className","onClick","e","onEdit","title","onDelete","TodoList","useState","todoInput","setTodoInput","editedTodoInput","setEditedTodoInput","todosLS","localStorage","getItem","split","todos","setTodos","textInputRef","useRef","localeSave","items","length","setItem","join","deleteTodo","todoText","filtered","prevTodos","filter","todo","console","log","clear","editTodo","current","focus","todoItems","map","key","type","onChange","target","value","onKeyDown","updatedTodoIndex","findIndex","text","updatedTodos","ref","App","navigator","window","addEventListener","serviceWorker","register","ReactDOM","render","document","getElementById"],"mappings":"qMAsBeA,MApBf,SAAkBC,GAUhB,OACE,yBAAKC,UAAU,aACb,wBAAIC,QANR,SAAyBC,GACvBH,EAAMI,OAAOJ,EAAMK,MAAOF,KAKOH,EAAMK,OACrC,0BAAMJ,UAAU,cAAcC,QAXlC,WACEF,EAAMM,SAASN,EAAMK,SAUnB,YC8ESE,MAzFf,WAAqB,IAAD,EACgBC,mBAAS,IADzB,mBACXC,EADW,KACAC,EADA,OAE4BF,mBAAS,IAFrC,mBAEXG,EAFW,KAEMC,EAFN,KAIZC,EAAUC,aAAaC,QAAQ,SAJnB,EAKQP,mBAA4B,kBAAZK,EAAuBA,EAAQG,MAAM,KAAO,IALpE,mBAKXC,EALW,KAKJC,EALI,KAMZC,EAAeC,iBAAO,MAE5B,SAASC,EAAWC,GACdA,EAAMC,QACRT,aAAaU,QAAQ,QAASF,EAAMG,KAAK,MAiC7C,SAASC,EAAWC,GAClB,IAAIC,EAAW,GACfV,GAAS,SAAAW,GAGP,OADAR,EADAO,EAAWC,EAAUC,QAAO,SAAAC,GAAI,OAAIA,IAASJ,MAEtCC,KAEPI,QAAQC,IAAIL,GACPA,EAASL,QACZT,aAAaoB,QAInB,SAASC,EAASR,GAChBjB,EAAaiB,GACbf,EAAmBe,GACnBR,EAAaiB,QAAQC,QAIvB,IAAMC,EAAYrB,EAAMsB,KAAI,SAAAR,GAC1B,OACE,kBAAC,EAAD,CACES,IAAKT,EACL1B,MAAO0B,EACPzB,SAAUoB,EACVtB,OAAQ+B,OAKd,OACE,yBAAKlC,UAAU,kBACb,2BACEA,UAAU,aACVwC,KAAK,OACLC,SAjEN,SAAsBvC,GACpBO,EAAaP,EAAEwC,OAAOC,QAiElBC,UA9DN,SAAoB1C,GAClB,IAAM2C,EAAmB7B,EAAM8B,WAAU,SAAAC,GAAI,OAAIA,IAASrC,KAC1D,GAAc,UAAVR,EAAEqC,KAAmB/B,EACvB,GAAKE,EAME,CACL,IAAMsC,EAAY,YAAOhC,GACzBgC,EAAaH,GAAoBrC,EACjCS,EAAS+B,GACT/B,GAAS,SAAAW,GAIP,OAHIoB,GACF5B,EAAW4B,GAENA,KAETvC,EAAa,IACbE,EAAmB,SAhBnBM,GAAS,SAAAW,GAEP,OADAR,EAAW,GAAD,mBAAKQ,GAAL,CAAgBpB,KACpB,GAAN,mBAAWoB,GAAX,CAAsBpB,OAExBC,EAAa,KAuDbkC,MAAOnC,EACPyC,IAAK/B,IAENmB,IC3EQa,MARf,WACE,OACE,8BACE,kBAAC,EAAD,QCHF,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cAAcC,SAAS,uBACjCxB,QAAQC,IAAI,gCAIhBwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6933ba51.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TodoItem(props) {\n\n  function handleClickDelete() {\n    props.onDelete(props.title)\n  }\n\n  function handleClickEdit(e) {\n    props.onEdit(props.title, e)\n  }\n\n  return(\n    <div className=\"todo-item\">\n      <h2 onClick={handleClickEdit}>{props.title}</h2>\n      <span className=\"delete-icon\" onClick={handleClickDelete}>\n        âˆš\n      </span>\n    </div>\n  );\n}\n\nexport default TodoItem;","import React, { useState, useRef } from \"react\";\nimport TodoItem from \"./TodoItem.jsx\";\n\n\nfunction TodoList() {\n  const [todoInput, setTodoInput] = useState(\"\")\n  const [editedTodoInput, setEditedTodoInput] = useState(\"\")\n\n  const todosLS = localStorage.getItem('todos')\n  const [todos, setTodos] = useState(typeof todosLS === 'string' ? todosLS.split(\"|\") : [])\n  const textInputRef = useRef(null);\n\n  function localeSave(items) {\n    if (items.length) {\n      localStorage.setItem('todos', items.join(\"|\"));\n    }\n  }\n\n  function handleChange(e) {\n    setTodoInput(e.target.value);\n  }\n\n  function submitTodo(e) {\n    const updatedTodoIndex = todos.findIndex(text => text === editedTodoInput)\n    if (e.key === \"Enter\" && todoInput) {\n      if (!editedTodoInput) {\n        setTodos(prevTodos => {\n          localeSave([...prevTodos, todoInput])\n          return [...prevTodos, todoInput]\n        })\n        setTodoInput(\"\");\n      } else {\n        const updatedTodos = [...todos]\n        updatedTodos[updatedTodoIndex] = todoInput\n        setTodos(updatedTodos)\n        setTodos(prevTodos => {\n          if (updatedTodos) {\n            localeSave(updatedTodos)\n          }\n          return updatedTodos\n        })\n        setTodoInput(\"\")\n        setEditedTodoInput(\"\")\n      }\n    }\n  }\n\n  function deleteTodo(todoText) {\n    let filtered = [];\n    setTodos(prevTodos => {\n      filtered = prevTodos.filter(todo => todo !== todoText)\n      localeSave(filtered)\n      return filtered;\n      })\n      console.log(filtered);\n      if (!filtered.length) {\n        localStorage.clear();\n      }\n    }\n\n  function editTodo(todoText) {\n    setTodoInput(todoText)\n    setEditedTodoInput(todoText)\n    textInputRef.current.focus()\n  }\n\n\n  const todoItems = todos.map(todo => {\n    return (\n      <TodoItem\n        key={todo}\n        title={todo}\n        onDelete={deleteTodo}\n        onEdit={editTodo}\n      />\n    )\n  })\n\n  return(\n    <div className=\"todo-container\">\n      <input\n        className=\"todo-input\"\n        type=\"text\"\n        onChange={handleChange}\n        onKeyDown={submitTodo}\n        value={todoInput}\n        ref={textInputRef}\n      />\n      {todoItems}\n    </div>\n  );\n}\n\nexport default TodoList;","import React from \"react\";\nimport TodoList from \"./TodoList.jsx\";\n// import Header from \"./Header.jsx\";\n\n\nfunction App() {\n  return (\n    <main>\n      <TodoList />\n    </main>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker.register('./service-worker.js');\n    console.log('Service Worker Registered')\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}